# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'xinguan_xlpj.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import pyqtSignal, QRegExp
from PyQt5.QtWidgets import QWidget, QMessageBox, QFileDialog, QApplication, QDialog
from PyQt5.QtGui import QRegExpValidator, QIntValidator
import os


class Ui_Dialog(QWidget):

    paramSignal = pyqtSignal(dict)
    startSignal = pyqtSignal(int)
    signal = 0

    def setupUi(self, Dialog):
        self.Dialog = Dialog
        Dialog.setObjectName("Dialog")
        Dialog.resize(831, 451)

        # 设置标签字体
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)

        # 设置输入框字体
        font_le = QtGui.QFont()
        font_le.setPointSizeF(11)
        font_le.setBold(True)
        font_le.setWeight(75)

        self.widget = QtWidgets.QWidget(Dialog)
        self.widget.setGeometry(QtCore.QRect(50, 20, 721, 351))
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        # 起始路径
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.ori_label = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ori_label.sizePolicy().hasHeightForWidth())
        self.ori_label.setSizePolicy(sizePolicy)
        self.ori_label.setMinimumSize(QtCore.QSize(100, 0))
        self.ori_label.setMaximumSize(QtCore.QSize(0, 16777215))
        self.ori_label.setObjectName("ori_label")
        self.ori_label.setFont(font)
        self.horizontalLayout.addWidget(self.ori_label)
        self.ori_LE = QtWidgets.QLineEdit(self.widget)
        self.ori_LE.setObjectName("ori_LE")
        self.ori_LE.setFont(font_le)
        self.ori_LE.setMinimumSize(QtCore.QSize(0, 30))
        self.horizontalLayout.addWidget(self.ori_LE)
        self.ori_tbtn = QtWidgets.QToolButton(self.widget)
        self.ori_tbtn.setObjectName("ori_tbtn")
        self.ori_tbtn.setMaximumSize(QtCore.QSize(30, 28))
        self.horizontalLayout.addWidget(self.ori_tbtn)
        self.verticalLayout.addLayout(self.horizontalLayout)
        # 列表文件
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.list_label = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.list_label.sizePolicy().hasHeightForWidth())
        self.list_label.setSizePolicy(sizePolicy)
        self.list_label.setMinimumSize(QtCore.QSize(100, 0))
        self.list_label.setMaximumSize(QtCore.QSize(0, 16777215))
        self.list_label.setObjectName("list_label")
        self.list_label.setFont(font)
        self.horizontalLayout_2.addWidget(self.list_label)
        self.list_LE = QtWidgets.QLineEdit(self.widget)
        self.list_LE.setObjectName("list_LE")
        self.list_LE.setFont(font_le)
        self.list_LE.setMinimumSize(QtCore.QSize(0, 30))
        self.horizontalLayout_2.addWidget(self.list_LE)
        self.list_tbtn = QtWidgets.QToolButton(self.widget)
        self.list_tbtn.setObjectName("list_tbtn")
        self.list_tbtn.setMaximumSize(QtCore.QSize(30, 28))
        self.horizontalLayout_2.addWidget(self.list_tbtn)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        # 结果路径
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.result_label = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.result_label.sizePolicy().hasHeightForWidth())
        self.result_label.setSizePolicy(sizePolicy)
        self.result_label.setMinimumSize(QtCore.QSize(100, 0))
        self.result_label.setMaximumSize(QtCore.QSize(0, 16777215))
        self.result_label.setObjectName("result_label")
        self.result_label.setFont(font)
        self.horizontalLayout_3.addWidget(self.result_label)
        self.result_LE = QtWidgets.QLineEdit(self.widget)
        self.result_LE.setObjectName("result_LE")
        self.result_LE.setFont(font_le)
        self.result_LE.setMinimumSize(QtCore.QSize(0, 30))
        self.horizontalLayout_3.addWidget(self.result_LE)
        self.result_tbtn = QtWidgets.QToolButton(self.widget)
        self.result_tbtn.setObjectName("result_tbtn")
        self.result_tbtn.setMaximumSize(QtCore.QSize(30, 28))
        self.horizontalLayout_3.addWidget(self.result_tbtn)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        # dataset
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.dataset_LB = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dataset_LB.sizePolicy().hasHeightForWidth())
        self.dataset_LB.setSizePolicy(sizePolicy)
        self.dataset_LB.setMinimumSize(QtCore.QSize(100, 0))
        self.dataset_LB.setMaximumSize(QtCore.QSize(0, 16777215))
        self.dataset_LB.setObjectName("dataset_LB")
        self.dataset_LB.setFont(font)
        self.horizontalLayout_4.addWidget(self.dataset_LB)
        self.dataset_LE = QtWidgets.QLineEdit(self.widget)
        self.dataset_LE.setObjectName("dataset_LE")
        self.dataset_LE.setFont(font_le)
        self.dataset_LE.setMinimumSize(QtCore.QSize(0, 30))
        self.dataset_LE.setText('/home/admin1/IPH-nano/dataset')
        self.horizontalLayout_4.addWidget(self.dataset_LE)
        self.dataset_tbtn = QtWidgets.QToolButton(self.widget)
        self.dataset_tbtn.setObjectName("dataset_tbtn")
        self.dataset_tbtn.setMaximumSize(QtCore.QSize(30, 28))
        self.horizontalLayout_4.addWidget(self.dataset_tbtn)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.widget1 = QtWidgets.QWidget(Dialog)
        self.widget1.setGeometry(QtCore.QRect(150, 350, 481, 91))
        self.widget1.setObjectName("widget1")

        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.widget1)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.run_btn = QtWidgets.QPushButton(self.widget1)
        self.run_btn.setMaximumSize(QtCore.QSize(100, 40))
        self.run_btn.setObjectName("run_btn")
        self.run_btn.setStyleSheet("QPushButton{\n"
                                   "    background:#2AC28F;\n"
                                   "    color:white;\n"
                                   "    box-shadow: 1px 1px 3px rgba(0,0,0,0.3);font-size:20px;border-radius: 3px;font-family: 思源黑体;\n"
                                   "}\n"
                                   "QPushButton:hover{                    \n"
                                   "    background:#99CC99;\n"
                                   "}\n")
        self.horizontalLayout_5.addWidget(self.run_btn)
        self.cancel_btn = QtWidgets.QPushButton(self.widget1)
        self.cancel_btn.setMaximumSize(QtCore.QSize(100, 40))
        self.cancel_btn.setObjectName("cancel_btn")
        self.cancel_btn.setStyleSheet("QPushButton{\n"
                                      "    background:rgb(241, 84, 84);\n"
                                      "    color:white;\n"
                                      "    box-shadow: 1px 1px 3px rgba(0,0,0,0.3);font-size:20px;border-radius: 3px;font-family: 思源黑体;\n"
                                      "}\n"
                                      "QPushButton:hover{                    \n"
                                      "    background:#FF6666;\n"
                                      "}\n")
        self.horizontalLayout_5.addWidget(self.cancel_btn)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.ori_tbtn.clicked.connect(lambda: self.choose_path(self.ori_LE))
        self.list_tbtn.clicked.connect(lambda: self.open_file(self.list_LE))
        self.result_tbtn.clicked.connect(lambda: self.choose_path(self.result_LE))
        self.dataset_tbtn.clicked.connect(lambda: self.choose_path(self.dataset_LE))

        self.run_btn.clicked.connect(self.receive_param)
        self.run_btn.clicked.connect(self.send_start_sig)
        self.cancel_btn.clicked.connect(Dialog.close)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.ori_label.setText(_translate("Dialog", "起始路径："))
        self.ori_tbtn.setText(_translate("Dialog", "..."))
        self.list_label.setText(_translate("Dialog", "列表文件："))
        self.list_tbtn.setText(_translate("Dialog", "..."))
        self.result_label.setText(_translate("Dialog", "结果路径："))
        self.result_tbtn.setText(_translate("Dialog", "..."))
        self.dataset_LB.setText(_translate("Dialog", "Dataset："))
        self.dataset_tbtn.setText(_translate("Dialog", "..."))
        self.run_btn.setText(_translate("Dialog", "运行"))
        self.cancel_btn.setText(_translate("Dialog", "取消"))

    def open_file(self, lineEdit):
        """
        选择具体的文件
        :param lineEdit: 将内容写入具体的文本框
        :return:
        """
        directory1 = QFileDialog.getOpenFileName(self.Dialog, "选取文件", "./")
        lineEdit.setText(directory1[0])

    def choose_path(self, lineEdit):
        """
        选择结果存放路径
        :param lineEdit: 将内容写入具体的文本框
        :return:
        """
        directory1 = QFileDialog.getExistingDirectory(self.Dialog, "选取文件夹", "./")
        lineEdit.setText(directory1)


    def receive_param(self):
        """
        接收子窗口中的所有参数，并发送给主窗口
        :return: 当前工作路径
        """
        # 起始文件
        ori_path = self.ori_LE.text()
        # 列表文件
        list_path = self.list_LE.text()
        list_path = list_path if list_path else 'None'
        # 结果路径
        result_path = self.result_LE.text()
        # dateset
        data_set = self.dataset_LE.text()

        if not ori_path or not data_set or not result_path:
            QMessageBox.warning(self, '警告', '参数不能为空！', QMessageBox.Ok)
        else:
            self.signal = 1
            # 根据起文件夹名称作为任务名称
            task_nm = ori_path.split('/')[-1] if '/' in ori_path else ori_path
            # 获取当前窗口标题进行任务区分
            task_type = self.Dialog.windowTitle()
            # 由于主页面需要显示（样品名称、barcode）参数，所以在子页面这两个参数必须存在
            parmas = {
                'task_type': task_type,
                'task_name': task_nm,
                'sample_list': '',
                'barcode_list': '',
                'result_path': result_path,
                'ori_path': ori_path,
                'list_path': list_path,
                'data_set': data_set,
            }
            # print(parmas)
            self.paramSignal.emit(parmas)
            self.Dialog.close()

    def send_start_sig(self):
        """
        发送启动信号给主界面，来调用命令运行程序
        :return:
        """
        # print(f'发送的信号为：{self.signal}')
        self.startSignal.emit(self.signal)


if __name__ == '__main__':
    app = QApplication(sys.argv)
    # 实例化主窗口
    main = QDialog()
    main_ui = Ui_Dialog()
    main_ui.setupUi(main)
    # 显示
    main.show()
    # QMessageBox.warning()
    sys.exit(app.exec_())
